{
    "0.3.0" : {
        "revapi" : {
            "ignore" : [
                {
                    "code" : "java.method.removed",
                    "regex" : true,
                    "old" : "method .* org\.revapi\.Difference\.Builder::.*",
                    "justification" : 
                       "These were not really removed but their signature changed slightly due to refactoring and generics. The code is still source compatible."
                },
                {
                    "code" : "java.method.returnTypeChanged",
                    "old" : "method org.revapi.Difference.Builder org.revapi.Report.Builder::addProblem()",
                    "justification" : "Return type changed to better differentiate use cases."
                },
                {
                    "code" : "java.method.visibilityReduced",
                    "old" : "method void org.revapi.Difference.Builder::<init>(org.revapi.Report.Builder)",
                    "justification" : "This was made a private no-arg constructor because the user code is not meant to instantiate these directly."
                },
                {
                    "code" : "java.method.numberOfParametersChanged",
                    "old" : "method void org.revapi.java.AnalysisConfiguration::<init>(org.revapi.java.AnalysisConfiguration.MissingClassReporting, java.util.Set<java.lang.String>, java.util.Set<java.io.File>, java.util.Set<java.io.File>, boolean, boolean)",
                    "justification" : "Configuration parameter removed, followed by this change, too."
                },
                {
                    "code" : "java.method.removed",
                    "old" : "method boolean org.revapi.java.AnalysisConfiguration::isIgnoreAdditionalClasspathContributions()",
                    "justification" : "This config parameter has been removed."
                },
                {
                    "code" : "java.method.numberOfParametersChanged",
                    "old" : "method void org.revapi.java.JavaArchiveAnalyzer::<init>(org.revapi.API, java.util.concurrent.ExecutorService, org.revapi.java.AnalysisConfiguration.MissingClassReporting, boolean, java.util.Set<java.io.File>, boolean)",
                    "justification" : "Changed because of the configuration parameter removal."
                },
                {
                    "code" : "java.method.numberOfParametersChanged",
                    "old" : "method org.revapi.java.compilation.CompilationValve org.revapi.java.compilation.Compiler::compile(org.revapi.java.compilation.ProbingEnvironment, org.revapi.java.AnalysisConfiguration.MissingClassReporting, boolean, java.util.Set<java.io.File>, boolean) throws java.lang.Exception",
                    "justification" : "Changed because of the configuration parameter removal."
                }
            ]
	}
    },
    "0.5.0" : {
        "revapi" : {
            "ignore" : [
                {
                    "code" : "java.method.addedToInterface",
                    "new" : "method org.revapi.CorrespondenceComparatorDeducer org.revapi.ApiAnalyzer::getCorrespondenceDeducer()",
                    "justification" : "This is the new API from Revapi 0.4.0. We're using that now."
                },
                {
                    "code" : "java.method.removed",
                    "old" : "method java.util.Comparator<? super org.revapi.Element> org.revapi.DifferenceAnalyzer::getCorrespondenceComparator()",
                    "justification" : "This is the new API from Revapi 0.4.0. We're using that now."
                },
                {
                    "code": "java.method.removed",
                    "old" : "method java.util.Comparator<? super org.revapi.Element> org.revapi.java.JavaElementDifferenceAnalyzer::getCorrespondenceComparator()",
                    "justification" : "This was the implementation of the old Revapi 0.3.x API. We're now implementing 0.4.0 which no longer requires this method."
                }
            ]
        }
    },
    "0.6.0" : {
        "revapi" : {
            "ignore" : [
                {
                    "code"  :"java.class.removed",
                    "old" : "class org.revapi.java.filters.IgnoreByAnnotationFilter",
                    "justification" : "Renamed to AnnotatedElementFilter and functionally enhanced."
                }
            ]
        }
    }
}

